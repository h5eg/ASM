
-------------------
----- 实现原则 -----
-------------------

当执行条件跳转指令时，需要检验 EFlags寄存器 中的标志位

只有被检测的标志位处于特定状态，才会跳转到指定标记处

否则执行失败，继续按顺序执行下一条指令



---------------------
----- JZ 与 JNZ -----
---------------------

DEC会把它的操作数减一，若是操作数的值变成了0，零标志ZF就会被设置为1

条件跳转指令JZ(零跳转)，就会检测ZF的值，发现ZF的值为1，执行跳转操作

若是ZF的值为0，跳转失败，程序会继续往下按顺序执行下一条指令


指令JNZ刚好与JZ相反


----- 简单总结 -----

当操作数的结果值为0，JZ成立

当操作数的结果值不为0，JNZ成立


JNZ常用于循环中，只要计数器不为0，循环体就会循环工作





---------------
----- CMP -----
---------------

标志位的两个主要应用：控制循环 和 两个数进行比较

CMP就是为了完成比较任务而 设置标志位 的指令


cmp指令，将第二个操作数 与 第一个操作数进行比较，然后根据结果设置相应的标志

cmp <op1>,<op2>  ; 设置 OF, SF, ZF, AF, PF ,CF



可以从另外一个角度来理解cmp

result = <op1> - <op2>

CMP是一个减法操作，却丢弃了结果值，只影响标志位


在执行CMP指令后，可以根据若干个算术条件进行跳转，如：小于，小于等于，等于，不等于，大于等于，大于




                     CMP 与 条件跳转指令的组合
------------------------------------------------------------------------------------
 条件       无符号值         跳转条件         有符号数       跳转条件
------------------------------------------------------------------------------------
 等于        JE             ZF=1             JE            ZF=1

不等于       JNE             ZF=0            JNE           ZF=0

 小于        JB             CF=1             JL            SF<>OF

小于等于     JBE           CF=1 或 ZF=1       JLE         ZF=1 或 SF<>OF

不大于       JNA           CF=1 或 ZF=1       JNG         ZF=1 或 SF<>OF

大于等于     JAE             CF=0             JGE           SF=OF

 大于        JA            CF=0 且 ZF=0       JG          ZF=0 或 SF=OF




----- 示例1 -----

mov cx,5

for:
  ....
  ....
  ....
  dec cx
  jnz for  ; 只要cx值不等于0，条件跳转就成立



----- 示例2 -----

mov ax,3

for:
	....
	....
	....
	dec ax    ; 每次条件循环，ax的值都减一
	cmp ax,0  ; 将 ax 与 0 进行比较
	jne for   ; 只要ax不等于0，条件就成立

