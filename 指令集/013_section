---------------------------
----------- 段 -----------
---------------------------

段，更利于操作 汇编地址 和 偏移地址。

汇编地址：汇编程序中的每个指令都具备一个汇编地址，默认的汇编地址基于程序开头，从0开始计算，没递增一字节地址数值加一。

偏移地址：偏移地址是相对而言的，可以是相对于整个程序开头的偏移地址，也可以是相对于段的段内偏移地址。


一个汇编程序，若没有定义任何段，汇编器会把整个汇编代码看成是一个段。



section  段名称  align=16/32/64  vstart=0x7c00/*

在一个程序中，段名称必须唯一。


-----------------------------
---- section.段名称.start ----
-----------------------------

每个段都有一个汇编地址，它是相对于整个程序的开头 0值 分配的。

汇编器提供了方便取得段汇编地址的方法。


示例：
section data align=16 vstart=0

section.data.start   ; 获取段data的汇编地址


----------------
---- align ----
----------------

align=16，表示段以16字节对齐
align=32，表示段以32字节对齐
align=64，表示段以32字节对齐


section data1 align=16
db 0x01

section data2 align=16
db 0x02

section data3 align=16
db 0x03


如果不考虑段对齐，以上三个段的起始汇编地址如下：

section.data1.start == 0x0000

section.data2.start == 0x0001

section.data3.start == 0x0002


使用了段对齐后:

section.data1.start == 0x0000

section.data2.start == 0x0010

section.data3.start == 0x0020


编译器会在data1和data2以及data3之间，填充15字节的0x00



----------------
---- vstart ----
----------------

即使定义了段，标记所代表的汇编地址依旧从程序的开头0值计算

vstart改变了这个规则，如果给段加上 vstart=0x7c00，段内的标记值会从所属段开始计算，而且是从数值 0x7c00 开始计算

没有添加 vstart 的段，段内的标记依旧从程序开始处计算

