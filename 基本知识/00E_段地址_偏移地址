

8086程序中，无论是访问指令还是数据，都是通过 段地址：偏移地址 的方式


---------------------
------- 段地址 -------
---------------------

8086的代码结构是以 段为基本单位 进行组织的

CS寄存器，负责指向 存放运行指令 的代码段
IP寄存器，充当段内偏移地址的功能

DS寄存器，负责指向 存放数据 的数据段
ES寄存器，负责指向 其他用途 的段


段地址可以是内存地址 0x00000～0xFFFFF 范围内，能被16整除的任何值

这里的任何值，可以是 0x00000, 0x00010 以及任何更大的值，只要最后一个数是 0 即可


为何段地址值必须是能被16整除的任何值？

段寄存器是16位的，而内存地址是20位的，因此段寄存器中实际存放的值需要右移4位，变成16位的

右移4位，会导致最右边四位被移除，这也就为何要求最后四位的值为何必须是 0

只要最后4位必须为0，就是一个能被16整除的数值




-----------------------
------- 偏移地址 -------
-----------------------

寄存器 BX，SI，DI，可用于段内偏移地址功能，配合 DS 和 ES 

充当偏移地址功能的寄存器都是16位的，因此偏移地址的范围 0x0000 ~ 0xFFFF



-----------------------
------- 汇编地址 -------
-----------------------

汇编地址仅对于汇编器而言，汇编程序在编译后，汇编地址并不存在于程序中

汇编程序中的每个字节空间，都会被汇编器分配到一条汇编地址，这么做的目的是为了给开发者提供帮助


汇编器还提供了一些辅助手段，让开发者很有效的使用到汇编地址

具体如何实现，查看指令 section

