



------------------
------ 端口 ------
------------------

端口: 位于I/O电路上的寄存器。


1.I/O接口上都会有一些寄存器，处理器 与 外部设备 的通信需要借助这些寄存器

2.每个I/O接口都可能拥有好几个端口，并用于不同的目的

3.端口也存在大小，8位，16位，32位，64位的都有




---------------------
------ 端口编号 ------
---------------------

端口在不同的计算机系统中有着不同的实现方式。

有的映射到内存地址空间，类似BIOS，有的是独立编址，不与内存地址有任何关系。

Intel处理器，早期是独立编址，现在既有内存映射，也有独立编址。


所有端口都是统一编号的。

Intel系统中，只允许 65536 个端口存在，端口号从 0 ～ 65535（0x0000~0xffff）。




---------------------
------ 操作端口 ------
---------------------

如果端口地址是映射到内存空间上，可以使用指令 mov 来操作端口。

若是独立编址的，就要通过指令 in 和 out 来操作端口。


----- in指令 -----

从端口读数据，不影响标志寄存器。


源操作数: 指明要读取的端口，只能是 DX 或 8位的立即数

目的操作数: 用来保存读取到的数据，只能是 AL 或 AX


in al,dx

in ax,dx

in al,0x8f01   ; 将端口号为0x8f01的寄存器中的数值，复制一份存放到 al 寄存器中

in ax,0x8f32


如果源操作数是8位的立即数，



----- out指令 -----

将数据写入指定端口，不影响标志寄存器


源操作数: 要写入的数据，必须是寄存器 AL 或 AX

目的操作数: 指明要写入的端口号，可以是 8位立即数 或 DX


out 0x07,al   ; al中存放着要写入端口的数据，0x07代表要操作的端口寄存器

out dx,ax     ; ax中存放着要写入端口的数据，dx中的数值代表要操作的端口寄存器
