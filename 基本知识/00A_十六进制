


铭记：二进制所有低位数的值之和，加一，等于高位数的值

1000 0000 ==》128

0111 1111 ==》127


为什么使用十六进制计数法？

机器识别的是二进制，人类主要习惯了识别十进制，而十六进制可用于两者之间的转换。

相比 二进制 和 十进制，十六进制更能简洁易读的表达字节数值

--- 二进制数 ----- 十六进制 ---- 十进制 ----
	 0000		     0           0
	 0001		     1           1
	 0010		     2           2
	 0011		     3           3
	 0100		     4           4
	 0101		     5           5
	 0110		     6           6
	 0111		     7           7
	 1000		     8           8
	 1001		     9           9
	 1010		     A           10
	 1011		     B           11
	 1100		     C           12
	 1101		     D           13
	 1110		     E           14
	 1111		     F           15

1100 0110 0101  <==>  0xC65

二进制数中的每一个位，称为比特，一字节有八比特。

二进制有两个基数：0 和 1

十进制有十个基数：0，1，2，3，4，5，6，7，8，9

十六进制有十六个基数：0，1，2，3，4，5，6，7，8，9，A，B，C，D，E，F


--- 二进制 转 十六进制 ---
1000 1100 --> 0x8C
将二进制数从右往左，以四比特为一组，分别将每一组转换成十六进制数，即可得到二进制数所对应的十六进制数。


--- 十进制 转 十进制 ---
255 --> 2*10^2 + 5*10^1 + 5*10^0 => 255


--- 二进制 转 十进制 ---
1001 0101 ---> 1*2^7 + 0*2^6 + 0*2^5 + 1*2^4 + 0*2^3 + 1*2^2 + 0*2^7 + 1*2^0  =>  128+16+4+1  => 149


--- 十六进制 转 十进制 ---
0x3A ---> 3*16^1 + 10*16^0  => 58




0x0000F ==> 15
0x000FF ==> 255
0x00FFF ==> 4095
0x0FFFF ==> 65535 ==> 65536/1024 ==> 64KB
0xFFFFF ==> 104 8575






