


--------------------
------- mov -------
--------------------

将数据拷贝一份到指定地址上

mov AX,0x1234 ; 将立即数0xFF存放到 AX寄存器 中
mov bx,ax     ; 将BX的内容拷贝一份传送到AX中，BX中的内容不变



如果操作数是一个地址，需要用[]括起来，告知编译器这是一个地址

mov ax, [ds:0x1234]   ; 从内存地址0x1234起，拷贝2字节数据传送到AX中
mov ax, [0x5678]      ; DS会被作为默认的段地址，此处就省略不写了



源操作数 和 目的操作数 不允许同时为地址值

mov byte [0x1234],[0x5678]  ; 这么写是错的



不允许直接将数值写入到段寄存器中，需要先将数值写入到通用寄存器，再转入到段寄存器中

mov ax,0x07c0
mov ds,ax



将数据拷贝到内存时，需要指定数据大小

mov byte [0x1234],0x11      ; 0x11 可以用一字节表示，也可以用两字节表示，因此必须明确指明

mov word [0x1234],0x0101




-----------------------
---- movsb / movsw ----
-----------------------

将数据批量传输到指定区域。

movsb，将数据从 DS：SI 传输到 ES：DI，每次传输一字节

movsw，与 movsb 不同之处在于，每次传输两字节

DS，数据段寄存器
SI，源索引寄存器

ES，附加段寄存器
DI，目标索引寄存器



----- 关联寄存器 和 指令 -----

CX，计数器寄存器，限定传输次数。


cld，指定正向传输，每传输一次 SI和DI 都会自增一次。
std，指定反向传输，每传输一次 SI和DI 都会自减一次。

（使用 movsb 自增/自减 1，使用 movsw 自增/自减 2 ）


rep，给 movsb 或 movsw 加上 rep 前缀，处理器将重复执行传输指令。

	每次执行 rep 指令时，都会先检测CX值是否为零，为零则不执行指令。

	每执行一次rep，CX 值都会减一。





